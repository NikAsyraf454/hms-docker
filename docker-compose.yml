services:
  app2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    # ports:
    #   - 9000:9001
    depends_on:
      - db2
    env_file:
      - ./.env
    volumes:
      - app2_storage:/usr/share/nginx/html/storage:rw
      - app2_public:/usr/share/nginx/html/public:rw
      # - ./backend:/usr/share/nginx/html
      # - ./.env:/usr/share/nginx/html/.env:rw
    networks:
      - dokploy-network
  # horizon:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   command: php artisan horizon
  #   environment:
  #     IS_WORKER: "true"
  #   env_file:
  #     - ./.env
  #   depends_on:
  #     - db
  #     - redis
  #   volumes:
  #     - storage:/usr/share/nginx/html/storage:rw
  #     - public:/usr/share/nginx/html/public:rw
  #   networks:
  #     - dokploy-network
  nginx2:
    image: nginx:1-alpine
    ports:
      # - 80:80
      - 8082:8082
    volumes:
      # - ./nginx.conf:/etc/nginx/templates/default.conf.template
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - app2_storage:/usr/share/nginx/html/storage:rw
      - app2_public:/usr/share/nginx/html/public:ro
    depends_on:
      - app2
    networks:
      - dokploy-network
  db2:
    image: mysql
    ports:
      - 3306:3306
    restart: always
    volumes:
      - app2-db-data:/var/lib/mysql
      - ./data/conf.d:/etc/mysql/conf.d
      - ./data/logs:/logs
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      # - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - dokploy-network
  # db:
  #   image: bitnami/postgresql:16.3.0
  #   platform: linux/amd64
  #   ports:
  #     - 5432:5432
  #   restart: always
  #   volumes:
  #     - db-data:/bitnami/postgresql
  #   environment:
  #     - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
  #     - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
  #     - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
  #   networks:
  #     - dokploy-network
  # redis:
  #   image: bitnami/redis:7.2
  #   platform: linux/amd64
  #   ports:
  #     - 6379:6379
  #   restart: always
  #   volumes:
  #     - redis-data:/bitnami/redis/data
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=no
  #     - REDIS_PASSWORD=${REDIS_PASSWORD}
  #     - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
  #   networks:
  #     - dokploy-network

volumes:
  app2_storage:
  app2_public:
  app2_db-data:
  app2_redis-data:

networks:
  dokploy-network:
    external: true
